name: "Build Docs"
inputs:
  header-type:
    description: 'Which version of a header should be generated. Options are branch, empty, or tag.'
    required: true
  doc-name:
    description: 'Name of the ref to be added to the version warning header.'
    required: true
  book-dir:
    description: 'book.toml location'
    required: true
  redirect-url:
    description: 'URL that the version warning header will suggest the user to visit.'
outputs:
  output-dir:
    description: "Directory where documents are generated."
    value: ${{ steps.build-docs.outputs.output-dir }}
runs:
    using: "composite"
    steps:
      - name: Calculate Header Template File Location
        id: calc-header-template-loc
        shell: bash
        run: |
          echo "header-template=${{ github.action_path }}/header-templates/${{inputs.header-type}}/header.hbs" >> $GITHUB_OUTPUT
      - name: Warn If Header Template Missing
        id: load-header-template
        if: ${{ hashFiles(steps.calc-header-template-loc.outputs.header-template) == '' }}
        shell: bash
        run: | 
          echo "> [!WARNING]" >> $GITHUB_STEP_SUMMARY
          echo "> Could not find a docs header.hbs template for header-template=`${{steps.calc-header-template-loc.outputs.header-template}}`." >> $GITHUB_STEP_SUMMARY
          echo "> Docs will be built with the default `theme/header.hbs` template in the docs repo." >> $GITHUB_STEP_SUMMARY
      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.3
        with:
          files: '["${{steps.calc-header-template-loc.outputs.header-template}}"]'
        env:
          REF_NAME: ${{inputs.doc-name}}
          REDIRECT_URL: ${{inputs.redirect-url}}
      - name: Copy Header Template To Docs Src
        shell: bash
        run: |     
          cp "${{steps.calc-header-template-loc.outputs.header-template}}" "${{inputs.book-dir}}/theme/header.hbs" -f
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install cargo binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install mdbook
        shell: bash
        run: |
          mkdir mdbook
          curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.40/mdbook-v0.4.40-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=mdbook
          echo `pwd`/mdbook/ >> $GITHUB_PATH
      - name: Install mdbook preprocessors
        shell: bash
        run: |
          cargo binstall mdbook-alerts --no-confirm
          cargo binstall mdbook-linkcheck --no-confirm
      - name: Build docs
        id: build-docs
        shell: bash
        run: |
          cd docs-export
          mdbook build ${{inputs.book-dir}}
          echo "output-dir=`pwd`/book/html" >> "$GITHUB_OUTPUT"